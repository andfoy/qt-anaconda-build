{% set version = "5.15.2" %}
{% set webengine_version = "5.15.4" %}

package:
  name: qt
  version: {{ version }}

source:
  - url: http://download.qt.io/official_releases/qt/{{ version.rpartition('.')[0] }}/{{ version }}/single/qt-everywhere-src-{{ version }}.tar.xz
    sha256: 3a530d1b243b5dec00bc54937455471aaa3e56849d2593edb8ded07228202240
    folder: qt
    patches:
      # qtbase
      - patches/qt/0002-qtbase-osx-allow-any-xcrun-in-PATH.patch
      - patches/qt/0003-qtbase-use-better-clang-optimize-size.patch
      - patches/qt/0004-qtbase-never-enable-new-dtags.patch
      - patches/qt/0009-qtbase-fix-hardcoded-sysroot-path.patch

      # The following patches are required to cross-compile Qt host tools (osx)
      # to work both on x86_64 and arm64
      - patches/qt/0005-Add-arm64-support-for-host-tools.patch             # [arm64 and build_platform != target_platform]
      - patches/qt/0006-Enable-arm64-x86_64-support-for-qttools.patch      # [arm64 and build_platform != target_platform]
      - patches/qt/0007-Make-qml-host-tools-to-be-arm64-compatiible.patch  # [arm64 and build_platform != target_platform]
      - patches/qt/0008-Make-repc-arm64-compatible.patch                   # [arm64 and build_platform != target_platform]
      - patches/qt/0009-Enable-arm64-support-for-qgltf.patch               # [arm64 and build_platform != target_platform]
      - patches/qt/0010-Enable-arm64-support-for-qtscxmlc.patch            # [arm64 and build_platform != target_platform]

      # The following patches are required to compile Qt using native arm64
      # compilers
      - patches/qt/0008-Force-host-to-be-the-same-as-the-target.patch        # [arm64 and build_platform == target_platform]
      - patches/qt/0009-Ensure-no-cross-compilation-checks-are-done.patch    # [arm64 and build_platform == target_platform]
      - patches/qt/0010-Try-to-set-arm64-explicitly.patch                    # [arm64 and build_platform == target_platform]
      - patches/qt/0011-Prevent-stat64-definition.patch                      # [arm64 and build_platform == target_platform]

  - url: http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/opengl32sw-64-mesa_12_0_rc2.7z      # [win64]
    sha256: 2a0d2f92c60e0962ef5f6039d3793424c6f39e49ba27ac04a5b21ca4ae012e15                                      # [win64]
    folder: opengl32sw                                                                                            # [win64]

  - git_url: https://code.qt.io/qt/qtwebengine.git
    git_rev: v{{ webengine_version }}-lts
    folder: qtwebengine

  - git_url: https://code.qt.io/qt/qtwebengine-chromium.git
    git_rev: 87-based
    folder: qtwebengine-chromium
    patches:
      - patches/webengine/0001-aarch64-sys-state-structs.patch                             # [aarch64]
      - patches/webengine/0002-macos-fatal-warnings.patch                                  # [osx]
      - patches/webengine/0003-Set-host-and-target-cpus-in-gn-build.patch                  # [arm64]
      - patches/webengine/0005-macos-use-CONDA_BUILD_SYSROOT.patch                         # [osx]
      # - patches/webengine/0004-macos-arm64-float16-conv.patch                              # [arm64]
      # - patches/webengine/0007-Compile-GN-to-support-both-x86_64-and-arm64-archs-wh.patch  # [arm64]

  - url: https://download.qt.io/development_releases/gnuwin32/gnuwin32.zip  # [win]
    folder: gnuwin32  # [win]
    sha256: 4a9dc893cc0a1695a16102a42ef47ef2e228652891f4afea67fadd452b63656b  # [win]

build:
  number: 0
  detect_binary_files_with_prefix: true
  skip: true   # [ppcle64 or s390x]

outputs:
  - name: qt-main
    version: {{ version }}
    script: build-qt.sh  # [not win]
    script: bld-qt.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage('qt-main', max_pin='x.x') }}
      ignore_run_exports:
        - openssl
        - krb5
        - nss
        - nspr
      missing_dso_whitelist:  # [osx]
        - /usr/lib/libbsm.0.dylib  # [osx]
        - /usr/lib/libcups.2.dylib  # [osx]
        - /usr/lib/libresolv.9.dylib  # [osx]
        - /usr/lib/libsandbox.1.dylib  # [osx]
        - '/System/Library/Frameworks/CoreLocation.framework/**'  # [osx]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - sysroot_linux-64 2.17              # [linux]
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
        - {{ cdt('libx11-devel') }}          # [linux]
        - {{ cdt('libxext') }}               # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-libegl') }}           # [linux]
        - {{ cdt('mesa-libegl-devel') }}     # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('alsa-lib-devel') }}        # [linux]
        - {{ cdt('gtk2-devel') }}            # [linux]
        - {{ cdt('gtkmm24-devel') }}         # [linux]
        - {{ cdt('libdrm-devel') }}          # [linux]
        - {{ cdt('libxcomposite-devel') }}   # [linux]
        - {{ cdt('libxcursor-devel') }}      # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('libxrandr-devel') }}       # [linux]
        - {{ cdt('pciutils-devel') }}        # [linux]
        - {{ cdt('libxscrnsaver-devel') }}   # [linux]
        - {{ cdt('libxtst-devel') }}         # [linux]
        - {{ cdt('libselinux') }}            # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('libxxf86vm-devel') }}      # [linux]
        - {{ cdt('libsm-devel') }}           # [linux]
        - {{ cdt('libice-devel') }}          # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('libxcb-devel') }}          # [linux]
        - {{ cdt('expat-devel') }}           # [linux]
        - {{ cdt('pcre') }}                  # [linux]
        - {{ cdt('libglvnd-glx') }}          # [linux]
        - {{ cdt('libglvnd-egl') }}          # [linux]
        - {{ cdt('libxkbcommon-devel') }}    # [linux]
        - {{ cdt('xcb-util-devel') }}        # [linux]
        - {{ cdt('xcb-util-image-devel') }}  # [linux]
        - {{ cdt('xcb-util-keysyms-devel') }}     # [linux]
        - {{ cdt('xcb-util-renderutil-devel') }}  # [linux]
        - {{ cdt('xcb-util-wm-devel') }}          # [linux]

        # For fontconfig + freetype
        - pkg-config                         # [unix]
        - make                               # [unix]
        - ninja
        - ruby >=2.5                         # [linux]
        - bison                              # [linux]
        - flex                               # [linux]
        - gperf                              # [linux]
        - m2-gperf                           # [win]
        - m2-bison                           # [win]
        - m2-flex                            # [win]
        - m2-patch                           # [win]
        - jom                                # [win]
        - curl                               # [win]
        - perl 5.*
        # Add readline here, so that newest readline is used.
        # Otherwise build and host might end up with two different versions
        # If they do, merge_build_host will fail.
        - readline                           # [linux]
        # libclang is required in order to enable simultaneous x86_64 and
        # arm64 support for QDoc
        - libclang                           # [arm64]
        # Although these should be host-only dependencies, they are needed when
        # cross-compiling arm64 binaries on x86_64 since llvm-config (host/arm64)
        # cannot be executed on x86_64 to locate libclang successfully
        - llvmdev                           # [arm64]
        - clangdev                          # [arm64]
      host:
        # For pkg-config gl, fontconfig + freetype
        - pthread-stubs                      # [linux]
        - dbus                               # [linux]
        - fontconfig                         # [linux]
        - freetype                           # [linux]
        - glib
        - gst-plugins-base
        - gstreamer
        - pulseaudio                         # [linux]
        - libxml2                            # [linux]
        - libxkbcommon                       # [linux]
        - expat                              # [linux]
        - libevent                           # [linux]
        - icu
        # jpeg-turbo currently has some conflicting issues in conda-forge
        # see: https://github.com/conda-forge/conda-forge.github.io/issues/673
        - jpeg
        - libpng
        - nspr                               # [unix]
        - nss                                # [unix]
        - sqlite
        # - mysql-devel                        # [not win]
        - postgresql                         # [not win]
        - zlib
        - libxcb                             # [linux]
        - openssl
        # For QDoc
        # http://doc.qt.io/Qt-5/qdoc-guide-clang.html
        # Only libclang is needed, but needs the full package for detection.
        - llvmdev
        - clangdev
        - libclang
        - libcups                            # [linux]
        - zstd
        - alsa-lib                           # [linux]
        - krb5
      run:
        - {{ pin_compatible("nss") }}        # [unix]
        - {{ pin_compatible("nspr") }}       # [unix]
        - libxcb                             # [linux]
        - {{ pin_compatible("libclang") }}
      run_constrained:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.14") }}  # [osx and x86_64]
        - qt {{ version }}
    test:
      requires:
        - {{ compiler('cxx') }}
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
        - {{ cdt('libx11-devel') }}          # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-libegl-devel') }}     # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('alsa-lib-devel') }}        # [linux]
        - {{ cdt('gtk2-devel') }}            # [linux]
        - {{ cdt('gtkmm24-devel') }}         # [linux]
        - {{ cdt('libdrm-devel') }}          # [linux]
        - {{ cdt('libxcomposite-devel') }}   # [linux]
        - {{ cdt('libxcursor-devel') }}      # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('libxrandr-devel') }}       # [linux]
        - {{ cdt('pciutils-devel') }}        # [linux]
        - {{ cdt('libxscrnsaver-devel') }}   # [linux]
        - {{ cdt('libxtst-devel') }}         # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('expat-devel') }}           # [linux]
        - {{ cdt('pcre') }}                  # [linux]
        - {{ cdt('libglvnd-glx') }}          # [linux]
        - make                               # [unix]
      files:
        - test/qt/hello.pro
        - test/qt/main-qtwebengine.cpp
        - test/qt/main.cpp
        - test/qt/main.qml
        - test/qt/qml.qrc
        - test/qt/qrc_qml.cpp
        - test/qt/qtwebengine.pro
        - xcodebuild
        - xcrun
      script: run_qt_test.sh                 # [not win]
      script: run_qt_test.bat                # [win]
      commands:
        # sql plugin
        - test -f $PREFIX/plugins/sqldrivers/libqsqlite${SHLIB_EXT}            # [unix]
        - if not exist %LIBRARY_PREFIX%\plugins\sqldrivers\qsqlite.dll exit 1  # [win]

  - name: qt-webengine
    version: {{ webengine_version }}
    script: build-webengine.sh  # [not win]
    script: bld-webengine.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage('qt-webengine', max_pin='x.x') }}
      missing_dso_whitelist:  # [osx]
        - /usr/lib/libbsm.0.dylib  # [osx]
        - /usr/lib/libcups.2.dylib  # [osx]
        - /usr/lib/libresolv.9.dylib  # [osx]
        - /usr/lib/libsandbox.1.dylib  # [osx]
        - '/System/Library/Frameworks/CoreLocation.framework/**'  # [osx]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - sysroot_linux-64 2.17              # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libselinux') }}            # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('libxext') }}               # [linux]
        - {{ cdt('alsa-lib-devel') }}        # [linux]
        - {{ cdt('cups-devel') }}            # [linux]
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
        - {{ cdt('libx11-devel') }}          # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-libegl-devel') }}     # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('alsa-lib-devel') }}        # [linux]
        - {{ cdt('gtk2-devel') }}            # [linux]
        - {{ cdt('gtkmm24-devel') }}         # [linux]
        - {{ cdt('libdrm-devel') }}          # [linux]
        - {{ cdt('libxcomposite-devel') }}   # [linux]
        - {{ cdt('libxcursor-devel') }}      # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('libxrandr-devel') }}       # [linux]
        - {{ cdt('pciutils-devel') }}        # [linux]
        - {{ cdt('libxscrnsaver-devel') }}   # [linux]
        - {{ cdt('libxtst-devel') }}         # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('libxxf86vm-devel') }}      # [linux]
        - {{ cdt('cups-devel') }}            # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('expat-devel') }}           # [linux]
        - pkg-config                         # [unix]
        - make                               # [unix]
        - cmake
        - ninja
        - ruby >=2.5                         # [linux]
        - bison                              # [linux]
        - flex                               # [linux]
        - gperf                              # [linux]
        - perl 5.*
        - readline                           # [linux]
        - jom                                # [win]
        - nodejs >=16
      host:
        # Chromium expects libjpeg-turbo as their main libjpeg reference and therefore
        # it will use an statically-linked version to it whilst
        # https://github.com/conda-forge/conda-forge.github.io/issues/673 is fixed.
        # Most internal dependencies such as SKIA use turbo-jpeg specific functions
        # and constants, and therefore trying to patch them would cause unexpected
        # errors or would be impossible.
        # - jpeg
        - pulseaudio                         # [linux]
        # - gstreamer
        - pthread-stubs                      # [linux]
        - dbus                               # [linux]
        - fontconfig                         # [linux]
        - freetype                           # [linux]
        # - gst-plugins-base
        # - gstreamer
        - libglib                            # [linux]
        - libxml2                            # [linux]
        - libxkbcommon                       # [linux]
        - expat                              # [linux]
        - libevent                           # [linux]
        # - icu
        # - libpng
        # - libiconv
        # - nspr                               # [unix]
        # - nss                                # [unix]
        # - sqlite
        # - zlib
        - libxcb                             # [linux]
        - qt-main
        # - libwebp
        - openssl                            # [win]
      run:
        - {{ pin_compatible("qt-main", min_pin="x.x", max_pin="x") }}
      run_constrained:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.14") }}  # [osx and x86_64]
        - qt {{ version }}
    test:
      requires:
        - {{ compiler('cxx') }}
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
        - {{ cdt('libx11-devel') }}          # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('mesa-libegl-devel') }}     # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('alsa-lib-devel') }}        # [linux]
        - {{ cdt('gtk2-devel') }}            # [linux]
        - {{ cdt('gtkmm24-devel') }}         # [linux]
        - {{ cdt('libdrm-devel') }}          # [linux]
        - {{ cdt('libxcomposite-devel') }}   # [linux]
        - {{ cdt('libxcursor-devel') }}      # [linux]
        - {{ cdt('libxrandr-devel') }}       # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('pciutils-devel') }}        # [linux]
        - {{ cdt('libxscrnsaver-devel') }}   # [linux]
        - {{ cdt('libxtst-devel') }}         # [linux]
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libxdamage') }}            # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxfixes') }}             # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('expat-devel') }}           # [linux]
        - {{ cdt('pcre') }}                  # [linux]
        - {{ cdt('libglvnd-glx') }}          # [linux]
        - make                               # [unix]
      script: run_webengine_test.sh          # [not win]
      script: run_webengine_test.bat         # [win]
      files:
        - test/webengine/main-qtwebengine.cpp
        - test/webengine/qml.qrc
        - test/webengine/qrc_qml.cpp
        - test/webengine/main.qml
        - test/webengine/qtwebengine.pro

  - name: qt
    version: {{ version }}
    build:
      run_exports:
        - {{ pin_subpackage('qt', max_pin='x.x') }}
    requirements:
      run:
        - {{ pin_compatible("qt-main", max_pin="x.x") }}
        - {{ pin_compatible("qt-webengine", max_pin="x.x") }}
      run_constrained:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.14") }}  # [osx and x86_64]

about:
  home: http://qt.io
  license: LGPL-3.0-only
  license_file: LICENSE.LGPLv3
  summary: 'Qt is a cross-platform application and UI framework.'
  description: |
    Qt helps you create connected devices, UIs & applications that run
    anywhere on any device, on any operating system at any time.
  doc_url: http://doc.qt.io/
  dev_url: https://github.com/qt

extra:
  recipe-maintainers:
    - andfoy
    - ccordoba12
    - duncanmmacleod
    - gillins
    - mingwandroid
    - msarahan
    - ocefpaf
    - stuarteberg
    - Tobias-Fischer
